/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package groupredproject;


import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JTextField;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;



/**
 *
 * @author gabby
 */
public class rothIRA extends javax.swing.JFrame {

    /**
     * Creates new form rothIRA
     */
    public rothIRA() {
        initComponents();
        buttonGroup1.clearSelection();
        maxContributionYes.setSelected(false);
        maxContributionNo.setSelected(true);
        
        
        
        KeyAdapter positiveNumberKeyAdapter = new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                JTextField source = (JTextField) e.getSource();
                String currentText = source.getText();

                if (!Character.isDigit(c) && c != '.') {
                    e.consume();  
                } else if (c == '.' && currentText.contains(".")) {
                    e.consume(); 
                } else if (currentText.isEmpty() && c == '0' && source == ageInput) {
                    e.consume(); 
                }
            }
            
        };
        currentBalanceInput.addKeyListener(positiveNumberKeyAdapter);
        annualContributionInput.addKeyListener(positiveNumberKeyAdapter);
        rateOfReturnInput.addKeyListener(positiveNumberKeyAdapter);
        taxRateInput.addKeyListener(positiveNumberKeyAdapter);
        
        
        
          KeyAdapter numOnlyKeyAdapter = new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c)) {
                    e.consume(); 
                }
            }
     
        };
          ageInput.addKeyListener(numOnlyKeyAdapter);
          retirementAgeInput.addKeyListener(numOnlyKeyAdapter);
          
          
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        ResultLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        differenceLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rateOfReturnInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        maxContributionYes = new javax.swing.JRadioButton();
        maxContributionNo = new javax.swing.JRadioButton();
        taxRateInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        annualContributionInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        currentBalanceInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ageInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        retirementAgeInput = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        ageError = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        graphPanel = new java.awt.Panel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        ResultLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/groupredproject/taxFoundation.png"))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Marginal Tax Rate ");

        differenceLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        rateOfReturnInput.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Rate of Return (%) ");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Max Contribution ");

        buttonGroup1.add(maxContributionYes);
        maxContributionYes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        maxContributionYes.setText("Yes");
        maxContributionYes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maxContributionYesMouseClicked(evt);
            }
        });
        maxContributionYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxContributionYesActionPerformed(evt);
            }
        });

        buttonGroup1.add(maxContributionNo);
        maxContributionNo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        maxContributionNo.setText("No");
        maxContributionNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maxContributionNoMouseClicked(evt);
            }
        });

        taxRateInput.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Marginal Tax Rate (%)");

        annualContributionInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annualContributionInputActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Annual Contribution ($)");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Current Balance ($)");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Current Age (##)");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Retirement Age (##)");

        calculateButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        calculateButton.setText("Calculate");
        calculateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateButtonMouseClicked(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        ageError.setText(" ");

        panel1.setBackground(new java.awt.Color(62, 142, 224));

        jLabel13.setBackground(new java.awt.Color(0, 102, 102));
        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Roth IRA");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rateOfReturnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(annualContributionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(taxRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3))
                                    .addGap(36, 36, 36)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(currentBalanceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(maxContributionYes)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(maxContributionNo))
                                        .addComponent(ageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(retirementAgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(ageError, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(clearButton)
                        .addGap(18, 18, 18)
                        .addComponent(calculateButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(taxRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rateOfReturnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(annualContributionInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(currentBalanceInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxContributionYes)
                    .addComponent(maxContributionNo)
                    .addComponent(jLabel3))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(retirementAgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(calculateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ageError)
                .addGap(112, 112, 112))
        );

        jPanel2.setBackground(new java.awt.Color(62, 142, 224));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Capital Calc");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/groupredproject/CapitalLogo (3).png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addContainerGap(1663, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel12)
                .addGap(0, 23, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphPanelLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel10)
                .addContainerGap(474, Short.MAX_VALUE))
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                .addContainerGap(231, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(119, 119, 119))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(differenceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(differenceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(1, 1, 1)
                                .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(296, 296, 296)
                                .addComponent(ResultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 223, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void annualContributionInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annualContributionInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annualContributionInputActionPerformed

    private void maxContributionYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxContributionYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxContributionYesActionPerformed

    private void calculateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateButtonMouseClicked
        // TODO add your handling code here:
        
      

        if (currentBalanceInput.getText().isEmpty() || annualContributionInput.getText().isEmpty() || rateOfReturnInput.getText().isEmpty() || ageInput.getText().isEmpty() || retirementAgeInput.getText().isEmpty() || taxRateInput.getText().isEmpty() )
            {
                ResultLabel.setText("Please Fill Out All Fields");
        } 
        else 
            {
                double currentBalance = Double.parseDouble(currentBalanceInput.getText());
                double annualContribution = Double.parseDouble(annualContributionInput.getText());
                double expectedRateOfReturn = Double.parseDouble(rateOfReturnInput.getText()) / 100;
                int currentAge = Integer.parseInt(ageInput.getText());
                int retirementAge = Integer.parseInt(retirementAgeInput.getText());
                double marginalTaxRate = Double.parseDouble(taxRateInput.getText()) / 100;
                
                if (expectedRateOfReturn >.20 || expectedRateOfReturn < .009) {
                    ResultLabel.setText("Rate of Return cannot exceed 20% and be below .9%");
                    rateOfReturnInput.requestFocus();
                    return;
            }
                if (marginalTaxRate > .37 || marginalTaxRate < .009) {
                    ResultLabel.setText("Marginal tax rate cannot exceed 37% and be below .9%");
                    taxRateInput.requestFocus();
                    return;         
            }
                      if (retirementAge > 120){
                    ResultLabel.setText("Retirement Age cannot exceed 120");
                    retirementAgeInput.requestFocus();
                    return;
                }
                  if (currentBalance > 800000){
                    ResultLabel.setText("Current Balance must not exceed 8 Million");
                    retirementAgeInput.requestFocus();
                    return;
                }
            if (currentAge >= retirementAge){
                ResultLabel.setText("Current age cannot be greater than retirement age");
                ageInput.requestFocus();
                return;
            }
                              
            if (maxContributionNo.isSelected()) {
                if (currentAge <= 50 && annualContribution > 7000) {
                    ResultLabel.setText("For age 50 or under, the maximum contribution is $7,000.");
                    return; 
                } else if (currentAge > 50 && annualContribution > 8000) {
                    ResultLabel.setText("For age over 50, the maximum contribution is $8,000.");
                    return; 
                }
            }
                
                if (currentAge < 18 || currentAge > 120) {
                ageError.setText("Age must be between 18 and 120.");
                ageInput.setText("");
                return; 
            } else {
                ageError.setText(""); 
            }
                if (maxContributionYes.isSelected()) {
                annualContribution = currentAge >= 50 ? 8000 : 7000; 
            }
            

                double afterTaxContribution = annualContribution * (1 - marginalTaxRate);
                int yearsToRetirement = retirementAge - currentAge;

                double futureValue = currentBalance * Math.pow(1 + expectedRateOfReturn, yearsToRetirement) + 
                                     afterTaxContribution * (((Math.pow(1 + expectedRateOfReturn, yearsToRetirement) - 1) / expectedRateOfReturn));
                double futureValueTraditional = currentBalance * Math.pow(1 + expectedRateOfReturn, yearsToRetirement) + 
                                                annualContribution * (((Math.pow(1 + expectedRateOfReturn, yearsToRetirement) - 1) / expectedRateOfReturn));

                double futureValueTraditionalAfterTax = futureValueTraditional * (1 - 0.25);
                double differenceInValue = futureValue - futureValueTraditionalAfterTax;
                differenceLabel.setText("With the given information the Roth IRA account will result in" + String.format("%.2f", differenceInValue) + "more than a traditional IRA account");


                ResultLabel.setText("Roth IRA will have a balance of: $" + String.format("%.2f", futureValue) + "Traditional IRA will have a balance of:" + String.format("%.2f", futureValueTraditionalAfterTax));
                createGraph(currentBalance, annualContribution, expectedRateOfReturn, currentAge, retirementAge, marginalTaxRate); 
                
               
                
            }

    }//GEN-LAST:event_calculateButtonMouseClicked

      public void createGraph(double currentBalance, double annualContribution, double expectedRateOfReturn, int currentAge, int retirementAge, double marginalTaxRate) {
       
        XYSeries rothIRA = new XYSeries("Roth IRA");
        XYSeries traditionalIRA = new XYSeries("Traditional IRA (After Tax)");

        double rothBalance = currentBalance;
        double traditionalBalance = currentBalance;

       
        for (int year = 1; year <= (retirementAge - currentAge); year++) {
            rothBalance = rothBalance * (1 + expectedRateOfReturn) + annualContribution * (1 - marginalTaxRate);
            traditionalBalance = traditionalBalance * (1 + expectedRateOfReturn) + annualContribution;

       
            double traditionalAfterTaxBalance = traditionalBalance * (1 - marginalTaxRate);
            rothIRA.add(currentAge + year, rothBalance);
            traditionalIRA.add(currentAge + year, traditionalAfterTaxBalance);
        }

     
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(rothIRA);
        dataset.addSeries(traditionalIRA);

      
        JFreeChart chart = ChartFactory.createXYLineChart(
                "Growth Comparison: Roth IRA vs Traditional IRA",
                "Age",
                "Account Balance ($)",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false
        );

     
ChartPanel chartPanel = new ChartPanel(chart);
    chartPanel.setSize(600, 350); 
    chartPanel.setPreferredSize(new java.awt.Dimension(600, 350)); 
    chartPanel.setMouseWheelEnabled(true); 

    graphPanel.removeAll(); 
    graphPanel.add(chartPanel);

    graphPanel.revalidate(); 
    graphPanel.repaint();   
    }
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        currentBalanceInput.setText("");
        annualContributionInput.setText("");
        rateOfReturnInput.setText("");
        taxRateInput.setText("");
        differenceLabel.setText("");
        ResultLabel.setText("");
        ageInput.setText("");
        retirementAgeInput.setText("");
        annualContributionInput.setEnabled(true);
        buttonGroup1.clearSelection();
        maxContributionYes.setSelected(false);
        maxContributionNo.setSelected(true);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void maxContributionYesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxContributionYesMouseClicked
        // TODO add your handling code here:
        if (ageInput.getText().isEmpty()){
       
        ageInput.setText("18");
    }
          int currentAge = Integer.parseInt(ageInput.getText());
          annualContributionInput.setEnabled(true);
    
    if (currentAge >= 50) {
        annualContributionInput.setText("8000");
        annualContributionInput.setEnabled(false);
    } else {
        annualContributionInput.setText("7000");
        annualContributionInput.setEnabled(false);
    }
    }//GEN-LAST:event_maxContributionYesMouseClicked

    private void maxContributionNoMouseClicked(java.awt.event.MouseEvent evt){
        if (ageInput.getText().isEmpty()){
            ageInput.setText("");
            return;
        }
        String contributionText = annualContributionInput.getText().trim();
        if (contributionText.isEmpty()){
            annualContributionInput.setText("");
            annualContributionInput.setEnabled(true);
            return;
            
        }
        try {
            double annualContribution = Double.parseDouble(contributionText);
            if (annualContribution == 8000){
                annualContributionInput.setText("");
                annualContributionInput.setEnabled(true);
            } else if (annualContribution == 7000){
                annualContributionInput.setText("");
                annualContributionInput.setEnabled(true);
                
            }
        } catch (NumberFormatException e){
            annualContributionInput.setText("");
            annualContributionInput.setEnabled(true);
        }
        
        
    }
 /* 
    private void maxContributionNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maxContributionNoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_maxContributionNoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rothIRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rothIRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rothIRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rothIRA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rothIRA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel ageError;
    private javax.swing.JTextField ageInput;
    private javax.swing.JTextField annualContributionInput;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField currentBalanceInput;
    private javax.swing.JLabel differenceLabel;
    private java.awt.Panel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton maxContributionNo;
    private javax.swing.JRadioButton maxContributionYes;
    private java.awt.Panel panel1;
    private javax.swing.JTextField rateOfReturnInput;
    private javax.swing.JTextField retirementAgeInput;
    private javax.swing.JTextField taxRateInput;
    // End of variables declaration//GEN-END:variables
}
